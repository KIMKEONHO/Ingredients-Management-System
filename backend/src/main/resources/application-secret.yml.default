spring:
  security:
    oauth2:
      client:
        registration:
          kakao:
            clientId: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KAKAO_CLIENTID:NEED_TO_INPUT}
          google:
            clientId: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENTID:NEED_TO_INPUT}
            clientSecret: ${SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_GOOGLE_CLIENTSECRET:NEED_TO_INPUT}
  data:
    redis:
      password: ${SPRING_DATA_REDIS_PASSWORD:NEED_TO_INPUT}
custom:
  jwt:
    secretKey: ${CUSTOM_JWT_SECRETKEY:NEED_TO_INPUT}
  accessToken:
    expirationSeconds: ${CUSTOM_ACCESS_TOKEN_EXPIRATIONSECONDS:NEED_TO_INPUT}
  mail:
    username: ${CUSTOM_MAIL_USERNAME:NEED_TO_INPUT}
    password: ${CUSTOM_MAIL_PASSWORD:NEED_TO_INPUT}
  default:
    profile-url: ${CUSTOM_DEFAULT_PROFILE_URL:NEED_TO_INPUT}

  # AWS S3 설정
  aws:
    s3:
      bucket-name: ${CUSTOM_AWS_S3_BUCKET_NAME:NEED_TO_INPUT}
      region: ${CUSTOM_AWS_S3_REGION:NEED_TO_INPUT}
      img-dir-name: ${CUSTOM_AWS_S3_IMG_DIR_NAME:NEED_TO_INPUT}
    credentials:
      access-key: ${CUSTOM_AWS_CREDENTIALS_ACCESS_KEY:NEED_TO_INPUT}
      secret-key: ${CUSTOM_AWS_CREDENTIALS_SECRET_KEY:NEED_TO_INPUT}

  admin:
    main-email: ${CUSTOM_ADMIN_MAIN_EMAIL:NEED_TO_INPUT}